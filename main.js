(()=>{"use strict";var r,n,e,t,o,a,i,A,s,c,p,l,u,d,g={424:(r,n,e)=>{e.d(n,{Z:()=>h});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),A=e(667),s=e.n(A),c=new URL(e(695),e.b),p=new URL(e(43),e.b),l=new URL(e(725),e.b),u=i()(o());u.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Ms+Madi&display=swap);"]);var d=s()(c),g=s()(p),f=s()(l);u.push([r.id,":root\r\n{\r\n    --logo-font: 'Ms Madi', cursive;\r\n    font-size: 16px;\r\n    --purple: #5D3FD3;\r\n    --light: white;\r\n    --grey: #36454F;\r\n    --backgroundColor: var(--light);\r\n    --textColor: var(--grey);\r\n    --emphasisColor: var(--purple);\r\n}\r\nbody, html\r\n{\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\nbody\r\n{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: var(--backgroundColor);\r\n    color: var(--textColor);\r\n}\r\n\r\n#content\r\n{\r\n    width: max(50%, 350px);\r\n    height: 100vh;\r\n}\r\n\r\nnav\r\n{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    position: fixed;\r\n    width: max(50%, 350px);\r\n    height: 10%;\r\n}\r\n\r\n#logo\r\n{\r\n    font-family: var(--logo-font), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    color: var(--emphasisColor);\r\n    padding-left: 5px;\r\n}\r\n\r\nnav > form\r\n{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 10px;\r\n    width: max-content;\r\n}\r\n\r\nnav input\r\n{\r\n    border-radius: 15px;\r\n    border: none;\r\n    background-color: #E5E4E2;\r\n    height: 20px;\r\n    padding-left: 5px;\r\n}\r\n\r\nnav button[type = 'submit']\r\n{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    background-color: #E5E4E2;\r\n    background-image: url("+d+");\r\n    background-position: center;\r\n    background-size: 80%;\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n#results\r\n{\r\n    margin-top: 10vh;\r\n    height: 90vh;\r\n    width: 100%;\r\n}\r\n\r\n.error, .home\r\n{\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n}\r\n\r\n.error\r\n{\r\n    background-image: url("+g+");\r\n    background-size: 100%;\r\n}\r\n\r\n.home\r\n{\r\n    background-image: url("+f+");\r\n    background-size: contain;\r\n}\r\n\r\n@media all and (max-width: 300px) {\r\n    #content\r\n    {\r\n        width: 250px;\r\n    }\r\n\r\n    nav\r\n    {\r\n        width: 250px;\r\n    }\r\n\r\n    #logo\r\n    {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    nav input\r\n    {\r\n        width: 120px;\r\n    }\r\n}\r\n\r\n@media (prefers-color-scheme) \r\n{\r\n    :root\r\n    {\r\n        --backgroundColor: var(--grey);\r\n        --textColor: var(--light);\r\n        --emphasisColor: #F8C8DC;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AACA;;IAEI,+BAA+B;IAC/B,eAAe;IACf,iBAAiB;IACjB,cAAc;IACd,eAAe;IACf,+BAA+B;IAC/B,wBAAwB;IACxB,8BAA8B;AAClC;AACA;;IAEI,WAAW;IACX,YAAY;AAChB;;AAEA;;IAEI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,wCAAwC;IACxC,uBAAuB;AAC3B;;AAEA;;IAEI,sBAAsB;IACtB,aAAa;AACjB;;AAEA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,6BAA6B;IAC7B,eAAe;IACf,sBAAsB;IACtB,WAAW;AACf;;AAEA;;IAEI,0JAA0J;IAC1J,eAAe;IACf,gBAAgB;IAChB,2BAA2B;IAC3B,iBAAiB;AACrB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,SAAS;IACT,kBAAkB;AACtB;;AAEA;;IAEI,mBAAmB;IACnB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,yDAA6C;IAC7C,2BAA2B;IAC3B,oBAAoB;IACpB,4BAA4B;AAChC;;AAEA;;IAEI,gBAAgB;IAChB,YAAY;IACZ,WAAW;AACf;;AAEA;;IAEI,4BAA4B;IAC5B,2BAA2B;AAC/B;;AAEA;;IAEI,yDAA2C;IAC3C,qBAAqB;AACzB;;AAEA;;IAEI,yDAA4C;IAC5C,wBAAwB;AAC5B;;AAEA;IACI;;QAEI,YAAY;IAChB;;IAEA;;QAEI,YAAY;IAChB;;IAEA;;QAEI,iBAAiB;IACrB;;IAEA;;QAEI,YAAY;IAChB;AACJ;;AAEA;;IAEI;;QAEI,8BAA8B;QAC9B,yBAAyB;QACzB,wBAAwB;IAC5B;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Ms+Madi&display=swap');\r\n:root\r\n{\r\n    --logo-font: 'Ms Madi', cursive;\r\n    font-size: 16px;\r\n    --purple: #5D3FD3;\r\n    --light: white;\r\n    --grey: #36454F;\r\n    --backgroundColor: var(--light);\r\n    --textColor: var(--grey);\r\n    --emphasisColor: var(--purple);\r\n}\r\nbody, html\r\n{\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\nbody\r\n{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: var(--backgroundColor);\r\n    color: var(--textColor);\r\n}\r\n\r\n#content\r\n{\r\n    width: max(50%, 350px);\r\n    height: 100vh;\r\n}\r\n\r\nnav\r\n{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    position: fixed;\r\n    width: max(50%, 350px);\r\n    height: 10%;\r\n}\r\n\r\n#logo\r\n{\r\n    font-family: var(--logo-font), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    color: var(--emphasisColor);\r\n    padding-left: 5px;\r\n}\r\n\r\nnav > form\r\n{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 10px;\r\n    width: max-content;\r\n}\r\n\r\nnav input\r\n{\r\n    border-radius: 15px;\r\n    border: none;\r\n    background-color: #E5E4E2;\r\n    height: 20px;\r\n    padding-left: 5px;\r\n}\r\n\r\nnav button[type = 'submit']\r\n{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    background-color: #E5E4E2;\r\n    background-image: url('./images/magnify.png');\r\n    background-position: center;\r\n    background-size: 80%;\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n#results\r\n{\r\n    margin-top: 10vh;\r\n    height: 90vh;\r\n    width: 100%;\r\n}\r\n\r\n.error, .home\r\n{\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n}\r\n\r\n.error\r\n{\r\n    background-image: url('./images/error.svg');\r\n    background-size: 100%;\r\n}\r\n\r\n.home\r\n{\r\n    background-image: url('./images/search.svg');\r\n    background-size: contain;\r\n}\r\n\r\n@media all and (max-width: 300px) {\r\n    #content\r\n    {\r\n        width: 250px;\r\n    }\r\n\r\n    nav\r\n    {\r\n        width: 250px;\r\n    }\r\n\r\n    #logo\r\n    {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    nav input\r\n    {\r\n        width: 120px;\r\n    }\r\n}\r\n\r\n@media (prefers-color-scheme) \r\n{\r\n    :root\r\n    {\r\n        --backgroundColor: var(--grey);\r\n        --textColor: var(--light);\r\n        --emphasisColor: #F8C8DC;\r\n    }\r\n}"],sourceRoot:""}]);const h=u},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<r.length;c++){var p=[].concat(r[c]);t&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},i=[],A=0;A<r.length;A++){var s=r[A],c=t.base?s[0]+t.base:s[0],p=a[c]||0,l="".concat(c," ").concat(p);a[c]=p+1;var u=e(l),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(d);else{var g=o(d,t);t.byIndex=A,n.splice(A,0,{identifier:l,updater:g,references:1})}i.push(l)}return i}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var A=e(a[i]);n[A].references--}for(var s=t(r,o),c=0;c<a.length;c++){var p=e(a[c]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}a=s}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},43:(r,n,e)=>{r.exports=e.p+"97cc4518ee6dc2c00aba.svg"},695:(r,n,e)=>{r.exports=e.p+"c994fa30de1aeb7f5a8d.png"},725:(r,n,e)=>{r.exports=e.p+"caf477e3594c674a1d94.svg"}},f={};function h(r){var n=f[r];if(void 0!==n)return n.exports;var e=f[r]={id:r,exports:{}};return g[r](e,e.exports,h),e.exports}h.m=g,h.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return h.d(n,{a:n}),n},h.d=(r,n)=>{for(var e in n)h.o(n,e)&&!h.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:n[e]})},h.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),h.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;h.g.importScripts&&(r=h.g.location+"");var n=h.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var e=n.getElementsByTagName("script");e.length&&(r=e[e.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),h.p=r})(),h.b=document.baseURI||self.location.href,h.nc=void 0,r=h(379),n=h.n(r),e=h(795),t=h.n(e),o=h(569),a=h.n(o),i=h(565),A=h.n(i),s=h(216),c=h.n(s),p=h(589),l=h.n(p),u=h(424),(d={}).styleTagTransform=l(),d.setAttributes=A(),d.insert=a().bind(null,"head"),d.domAPI=t(),d.insertStyleElement=c(),n()(u.Z,d),u.Z&&u.Z.locals&&u.Z.locals,function(r){function n(){r.innerHTML=""}function e(){n(),r.classList.remove("error"),r.classList.remove("home")}return{node:r,clear:n,error:function(){n(),e(),r.classList.add("error")},home:function(){n(),e(),r.classList.add("home")}}}(document.getElementById("results")).home()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,